pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}
dependencyResolutionManagement {
    versionCatalogs {
        libs {
            library('retrofit2', 'com.squareup.retrofit2', 'retrofit').version('2.9.0')
            library('androidXCore', 'androidx.core', 'core-ktx').version('1.10.1')
            library('androidXLifecycle', 'androidx.lifecycle', 'lifecycle-runtime-ktx')
                    .version('2.6.1')
            library('androidXActivityCompose', 'androidx.activity', 'activity-compose')
                    .version('1.7.2')
            library('androidXComposeUi', 'androidx.compose.ui', 'ui-android')
                    .version('1.6.0-alpha01')
            library('androidXComposeUiGraphics', 'androidx.compose.ui', 'ui-graphics-android')
                    .version('1.6.0-alpha01')
            library('androidXComposeUiToolingPreview', 'androidx.compose.ui', 'ui-tooling-preview-android')
                    .version('1.6.0-alpha01')
            library('androidXMaterial3', 'androidx.compose.material3', 'material3')
                    .version('1.1.1')
            library('decompose', 'com.arkivanov.decompose', 'decompose')
                    .version('2.1.0-alpha-02')
            library('decomposeExtensionsCompose', 'com.arkivanov.decompose', 'extensions-compose-jetpack')
                    .version('2.1.0-alpha-02')
            library('decomposeExtensionsAndroid', 'com.arkivanov.decompose', 'extensions-android')
                    .version('2.1.0-alpha-02')
            library('okHttpLogInterceptor', 'com.squareup.okhttp3', 'logging-interceptor')
                    .version('4.11.0')
            library('converterMoshi', 'com.squareup.retrofit2', 'converter-moshi')
                    .version('2.9.0')
            library('kotlinMoshi', 'com.squareup.moshi', 'moshi-kotlin')
                    .version('1.14.0')
            library('kotlinXCoroutinesAndroid', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android')
                    .version('1.6.4')
            library('kotlinXCoroutinesCore', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core')
                    .version('1.6.4')

            library('junit', 'junit', 'junit')
                    .version('4.13.2')
            library('androidXTestJunit', 'androidx.test.ext', 'junit')
                    .version('1.1.5')
            library('esporesso', 'androidx.test.espresso', 'espresso-core')
                    .version('3.5.1')
            library('esporesso', 'androidx.test.espresso', 'espresso-core')
                    .version('3.5.1')
            library('composeTestJUnit', 'androidx.compose.ui', 'ui-test-junit4')
                    .version('1.4.1')
            library('composeUiTooling', 'androidx.compose.ui', 'ui-tooling')
                    .version('1.4.3')
            library('composeUiTestManifest', 'androidx.compose.ui', 'ui-test-manifest')
                    .version('1.4.3')
            library('kotlinPlatform', 'org.jetbrains.kotlin', 'kotlin-bom')
                    .version('1.8.0')
            library('composePlatform', 'androidx.compose', 'compose-bom')
                    .version('2022.10.00')

            library('hiltAndroid', 'com.google.dagger', 'hilt-android')
                    .version('2.46.1')
            library('hiltCompiles', 'com.google.dagger', 'hilt-compiler')
                    .version('2.46.1')
            library('roomRuntime', 'androidx.room', 'room-runtime')
                    .version('2.5.2')
            library('roomCompiler', 'androidx.room', 'room-compiler')
                    .version('2.5.2')
            library('roomKtx', 'androidx.room', 'room-ktx')
                    .version('2.5.2')
        }
    }
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}
rootProject.name = "Quiz"
include ':app'
include ':network'
include ':coreapi'
include ':repository'
include ':database'
